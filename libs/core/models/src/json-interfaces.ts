// This file was auto-generated by prisma-generator-typescript-interfaces

export type Gender = "Male" | "Female";

export type FileType = "Image" | "Video";

export type Role = "ADMIN" | "STAFF" | "DOCTOR" | "PATIENT";

export type Status = "ACTIVE" | "INACTIVE" | "DORMANT";

export type JOBTYPE = "FULL" | "PART";

export type AppointmentStatus = "PENDING" | "SCHEDULED" | "CANCELLED" | "COMPLETED";

export type PaymentMethod = "CASH" | "CARD" | "MOBILE";

export type PaymentStatus = "PAID" | "UNPAID" | "PARTIAL" | "REFUNDED";

export type ServiceCategory = "CONSULTATION" | "LAB_TEST" | "VACCINATION" | "PROCEDURE" | "PHARMACY" | "DIAGNOSIS" | "OTHER";

export type MeasurementType = "WFA" | "HFA" | "HcFA";

export type ChatRole = "USER" | "AI";

export type ReminderMethod = "EMAIL" | "SMS";

export type ReminderStatus = "SENT" | "FAILED" | "PENDING";

export type BillingStatus = "PENDING" | "PAID" | "INSURANCE_PENDING" | "DENIED";

export type NotificationType = "APPOINTMENT_REMINDER" | "BILLING" | "GENERAL" | "SECURITY";

export type FeedingType = "BREAST" | "FORMULA" | "MIXED";

export interface AdminJson {
  id: string;
  username: string;
  password: string;
  role: Role | null;
  name: string;
  phone: string;
  birthDate: date  | null;
  avatarId: string | null;
  avatar?: FileJson | null;
  isRoot: boolean;
  createdAt: date ;
  updatedAt: date ;
  uploads?: FileJson[];
}

export interface UserJson {
  id: string;
  name: string;
  email: string;
  emailVerified: boolean;
  image: string | null;
  username: string;
  password: string;
  phone: string;
  birthDate: date  | null;
  gender: Gender | null;
  displayUsername: string | null;
  sessions?: SessionJson[];
  accounts?: AccountJson[];
  Notification?: NotificationJson[];
  Staff?: StaffJson[];
  Doctor?: DoctorJson[];
  Patient?: PatientJson[];
  twoFactorEnabled: boolean | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: date  | null;
  twofactors?: TwoFactorJson[];
  avatarId: string | null;
  avatar?: FileJson | null;
  createdAt: date ;
  updatedAt: date ;
  uploads?: FileJson[];
}

export interface FileJson {
  id: string;
  key: string;
  size: number;
  type: FileType;
  isPublic: boolean;
  userId: string | null;
  user?: UserJson | null;
  admin?: AdminJson | null;
  adminId: string | null;
  createdAt: date ;
  updatedAt: date ;
  admins?: AdminJson[];
  users?: UserJson[];
}

export interface TwoFactorJson {
  id: string;
  secret: string;
  backupCodes: string;
  userId: string;
  user?: UserJson;
}

export interface SessionJson {
  id: string;
  expiresAt: date ;
  token: string;
  createdAt: date ;
  updatedAt: date ;
  ipAddress: string | null;
  userAgent: string | null;
  userId: string;
  user?: UserJson;
  impersonatedBy: string | null;
}

export interface AccountJson {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  user?: UserJson;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: date  | null;
  refreshTokenExpiresAt: date  | null;
  scope: string | null;
  password: string | null;
  createdAt: date ;
  updatedAt: date ;
}

export interface VerificationJson {
  id: string;
  identifier: string;
  value: string;
  expiresAt: date ;
  createdAt: date  | null;
  updatedAt: date  | null;
}

export interface PatientJson {
  id: string;
  firstName: string;
  lastName: string;
  userId: string;
  user?: UserJson;
  dateOfBirth: date ;
  gender: Gender;
  phone: string | null;
  email: string;
  nutritionalStatus: string | null;
  address: string | null;
  emergencyContactName: string | null;
  emergencyContactNumber: string | null;
  relation: string | null;
  bloodGroup: string | null;
  allergies: string | null;
  medicalConditions: string | null;
  medicalHistory: string | null;
  img: string | null;
  colorCode: string | null;
  role: Role | null;
  appointments?: AppointmentJson[];
  medical?: MedicalRecordsJson[];
  payments?: PaymentJson[];
  encounters?: EncounterJson[];
  immunizations?: ImmunizationJson[];
  growthCharts?: GrowthChartJson[];
  feedingLogs?: FeedingLogJson[];
  billing?: BillingJson[];
  createdAt: date ;
  updatedAt: date ;
  status: string | null;
  prescriptions?: PrescriptionJson[];
}

export interface DoctorJson {
  id: string;
  email: string;
  name: string;
  userId: string;
  user?: UserJson;
  specialization: string;
  licenseNumber: string | null;
  phone: string | null;
  address: string | null;
  department: string | null;
  img: string | null;
  colorCode: string | null;
  availabilityStatus: string | null;
  isActive: boolean | null;
  type: JOBTYPE;
  workingDays?: WorkingDaysJson[];
  appointments?: AppointmentJson[];
  diagnosis?: DiagnosisJson[];
  role: Role | null;
  createdAt: date ;
  updatedAt: date ;
  Prescription?: PrescriptionJson[];
  Encounter?: EncounterJson[];
  MedicalRecords?: MedicalRecordsJson[];
}

export interface WorkingDaysJson {
  id: number;
  doctorId: string;
  day: string;
  startTime: string;
  closeTime: string;
  doctor?: DoctorJson;
  createdAt: date ;
  updatedAt: date ;
}

export interface StaffJson {
  id: string;
  email: string;
  name: string;
  phone: string;
  userId: string;
  user?: UserJson;
  address: string;
  department: string | null;
  img: string | null;
  licenseNumber: string | null;
  colorCode: string | null;
  hireDate: date  | null;
  salary: number | null;
  role: Role;
  status: Status;
  createdAt: date ;
  updatedAt: date ;
  immunizations?: ImmunizationJson[];
  GrowthChart?: GrowthChartJson[];
}

export interface AppointmentJson {
  id: number;
  patientId: string;
  doctorId: string;
  serviceId: number | null;
  appointmentDate: date ;
  time: string;
  status: AppointmentStatus | null;
  type: string;
  note: string | null;
  patient?: PatientJson;
  doctor?: DoctorJson;
  service?: ServicesJson | null;
  bills?: PaymentJson[];
  medical?: MedicalRecordsJson[];
  reminders?: ReminderJson[];
  reason: string | null;
  createdAt: date ;
  updatedAt: date ;
  Billing?: BillingJson[];
}

export interface PaymentJson {
  id: number;
  billId: number | null;
  patientId: string;
  appointmentId: number;
  billDate: date ;
  paymentDate: date ;
  discount: number;
  totalAmount: number;
  amountPaid: number;
  paymentMethod: PaymentMethod;
  status: PaymentStatus;
  receiptNumber: number;
  appointment?: AppointmentJson;
  patient?: PatientJson;
  bills?: PatientBillsJson[];
  createdAt: date ;
  updatedAt: date ;
}

export interface ReminderJson {
  id: string;
  appointmentId: number;
  appointment?: AppointmentJson;
  method: ReminderMethod;
  sentAt: date ;
  status: ReminderStatus;
}

export interface PatientBillsJson {
  id: number;
  billId: number;
  serviceId: number;
  serviceDate: date ;
  quantity: number;
  unitCost: number;
  totalCost: number;
  service?: ServicesJson;
  payment?: PaymentJson;
  createdAt: date ;
  updatedAt: date ;
}

export interface LabTestJson {
  id: number;
  recordId: number;
  testDate: date ;
  result: string;
  status: string;
  notes: string | null;
  serviceId: number | null;
  services?: ServicesJson | null;
  medicalRecord?: MedicalRecordsJson;
  createdAt: date ;
  updatedAt: date ;
}

export interface MedicalRecordsJson {
  id: number;
  patientId: string;
  appointmentId: number;
  doctorId: string;
  treatmentPlan: string | null;
  prescriptions: string | null;
  labRequest: string | null;
  notes: string | null;
  appointment?: AppointmentJson;
  patient?: PatientJson;
  doctor?: DoctorJson;
  labTests?: LabTestJson[];
  encounters?: EncounterJson[];
  diagnoses?: DiagnosisJson[];
  prescriptionsList?: PrescriptionJson[];
  vitalSigns?: VitalSignsJson[];
  createdAt: date ;
  updatedAt: date ;
}

export interface EncounterJson {
  id: string;
  patientId: string;
  patient?: PatientJson;
  doctorId: string;
  doctor?: DoctorJson;
  date: date ;
  type: string;
  diagnosis: string | null;
  treatment: string | null;
  notes: string | null;
  medicalId: number;
  medical?: MedicalRecordsJson;
  vitalSigns?: VitalSignsJson[];
  createdAt: date ;
  updatedAt: date ;
}

export interface VitalSignsJson {
  id: string;
  encounterId: string | null;
  encounter?: EncounterJson | null;
  patientId: string;
  medicalId: number;
  medical?: MedicalRecordsJson;
  height: number | null;
  weight: number | null;
  temperature: number | null;
  systolic: number | null;
  diastolic: number | null;
  heartRate: number | null;
  respiratoryRate: number | null;
  oxygenSaturation: number | null;
  recordedAt: date ;
  createdAt: date ;
  updatedAt: date ;
}

export interface ImmunizationJson {
  id: string;
  patientId: string;
  patient?: PatientJson;
  vaccine: string;
  date: date ;
  dose: string | null;
  lotNumber: string | null;
  administeredByStaffId: string | null;
  administeredBy?: StaffJson | null;
  notes: string | null;
  createdAt: date ;
}

export interface GrowthChartJson {
  id: string;
  patientId: string;
  gender: Gender | null;
  patient?: PatientJson;
  date: date ;
  ageInDays: number;
  height: number;
  weight: number;
  headCircumference: number | null;
  percentileHeight: number | null;
  percentileWeight: number | null;
  percentileHead: number | null;
  measuredById: string | null;
  measuredBy?: StaffJson | null;
  heightZScore: number | null;
  weightZScore: number | null;
  notes: string | null;
}

export interface FeedingLogJson {
  id: string;
  patientId: string;
  patient?: PatientJson;
  date: date ;
  type: FeedingType;
  duration: number | null;
  amount: number | null;
  breast: string | null;
  notes: string | null;
}

export interface BillingJson {
  id: string;
  patientId: string;
  patient?: PatientJson;
  appointmentId: number | null;
  appointment?: AppointmentJson | null;
  amount: number;
  status: BillingStatus;
  insurance: string | null;
  insuranceId: string | null;
  serviceDate: date ;
  dueDate: date ;
  paidDate: date  | null;
  notes: string | null;
  createdAt: date ;
  updatedAt: date ;
}

export interface NotificationJson {
  id: string;
  userId: string;
  user?: UserJson;
  title: string;
  message: string;
  type: NotificationType;
  read: boolean;
  createdAt: date ;
}

export interface DiagnosisJson {
  id: number;
  patientId: string;
  medicalId: number;
  doctorId: string;
  doctor?: DoctorJson;
  symptoms: string;
  diagnosis: string;
  notes: string | null;
  prescribedMedications: string | null;
  followUpPlan: string | null;
  medical?: MedicalRecordsJson;
  createdAt: date ;
  updatedAt: date ;
}

export interface ServicesJson {
  id: number;
  serviceName: string;
  description: string;
  price: number;
  labtests?: LabTestJson[];
  bills?: PatientBillsJson[];
  category: ServiceCategory | null;
  duration: number | null;
  isAvailable: boolean;
  appointments?: AppointmentJson[];
  createdAt: date ;
  updatedAt: date ;
}

export interface PrescriptionJson {
  id: number;
  medicalRecordId: number;
  doctorId: string | null;
  patientId: string;
  medicationName: string;
  dosage: string;
  frequency: string;
  duration: string;
  instructions: string | null;
  issuedDate: date ;
  endDate: date  | null;
  status: string;
  medicalRecord?: MedicalRecordsJson;
  doctor?: DoctorJson | null;
  patient?: PatientJson;
  createdAt: date ;
  updatedAt: date ;
}

export interface WHOGrowthStandardJson {
  id: number;
  ageInMonths: number;
  gender: Gender;
  measurementType: MeasurementType;
  lValue: number;
  mValue: number;
  sValue: number;
  sd0: number;
  sd1neg: number;
  sd1pos: number;
  sd2neg: number;
  sd2pos: number;
  sd3neg: number;
  sd3pos: number;
  sd4neg: number | null;
  sd4pos: number | null;
  createdAt: date ;
  updatedAt: date ;
}
