// This file was auto-generated by prisma-generator-typescript-interfaces

export type Gender = "Male" | "Female";

export type FileType = "Image" | "Video";

export type Role = "ADMIN" | "STAFF" | "DOCTOR" | "PATIENT";

export type Status = "ACTIVE" | "INACTIVE" | "DORMANT";

export type JOBTYPE = "FULL" | "PART";

export type AppointmentStatus = "PENDING" | "SCHEDULED" | "CANCELLED" | "COMPLETED";

export type PaymentMethod = "CASH" | "CARD" | "MOBILE";

export type PaymentStatus = "PAID" | "UNPAID" | "PARTIAL" | "REFUNDED";

export type ServiceCategory = "CONSULTATION" | "LAB_TEST" | "VACCINATION" | "PROCEDURE" | "PHARMACY" | "DIAGNOSIS" | "OTHER";

export type MeasurementType = "WFA" | "HFA" | "HcFA";

export type ChatRole = "USER" | "AI";

export type ReminderMethod = "EMAIL" | "SMS";

export type ReminderStatus = "SENT" | "FAILED" | "PENDING";

export type BillingStatus = "PENDING" | "PAID" | "INSURANCE_PENDING" | "DENIED";

export type NotificationType = "APPOINTMENT_REMINDER" | "BILLING" | "GENERAL" | "SECURITY";

export type FeedingType = "BREAST" | "FORMULA" | "MIXED";

export interface Admin {
  id: string;
  username: string;
  password: string;
  role: Role | null;
  name: string;
  phone: string;
  birthDate: Date | null;
  avatarId: string | null;
  avatar?: File | null;
  isRoot: boolean;
  createdAt: Date;
  updatedAt: Date;
  uploads?: File[];
}

export interface User {
  id: string;
  name: string;
  email: string;
  emailVerified: boolean;
  image: string | null;
  username: string;
  password: string;
  phone: string;
  birthDate: Date | null;
  gender: Gender | null;
  displayUsername: string | null;
  sessions?: Session[];
  accounts?: Account[];
  Notification?: Notification[];
  Staff?: Staff[];
  Doctor?: Doctor[];
  Patient?: Patient[];
  twoFactorEnabled: boolean | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  twofactors?: TwoFactor[];
  avatarId: string | null;
  avatar?: File | null;
  createdAt: Date;
  updatedAt: Date;
  uploads?: File[];
}

export interface File {
  id: string;
  key: string;
  size: number;
  type: FileType;
  isPublic: boolean;
  userId: string | null;
  user?: User | null;
  admin?: Admin | null;
  adminId: string | null;
  createdAt: Date;
  updatedAt: Date;
  admins?: Admin[];
  users?: User[];
}

export interface TwoFactor {
  id: string;
  secret: string;
  backupCodes: string;
  userId: string;
  user?: User;
}

export interface Session {
  id: string;
  expiresAt: Date;
  token: string;
  createdAt: Date;
  updatedAt: Date;
  ipAddress: string | null;
  userAgent: string | null;
  userId: string;
  user?: User;
  impersonatedBy: string | null;
}

export interface Account {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  user?: User;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: Date | null;
  refreshTokenExpiresAt: Date | null;
  scope: string | null;
  password: string | null;
  createdAt: Date;
  updatedAt: Date;
}

export interface Verification {
  id: string;
  identifier: string;
  value: string;
  expiresAt: Date;
  createdAt: Date | null;
  updatedAt: Date | null;
}

export interface Patient {
  id: string;
  firstName: string;
  lastName: string;
  userId: string;
  user?: User;
  dateOfBirth: Date;
  gender: Gender;
  phone: string | null;
  email: string;
  nutritionalStatus: string | null;
  address: string | null;
  emergencyContactName: string | null;
  emergencyContactNumber: string | null;
  relation: string | null;
  bloodGroup: string | null;
  allergies: string | null;
  medicalConditions: string | null;
  medicalHistory: string | null;
  img: string | null;
  colorCode: string | null;
  role: Role | null;
  appointments?: Appointment[];
  medical?: MedicalRecords[];
  payments?: Payment[];
  encounters?: Encounter[];
  immunizations?: Immunization[];
  growthCharts?: GrowthChart[];
  feedingLogs?: FeedingLog[];
  billing?: Billing[];
  createdAt: Date;
  updatedAt: Date;
  status: string | null;
  prescriptions?: Prescription[];
}

export interface Doctor {
  id: string;
  email: string;
  name: string;
  userId: string;
  user?: User;
  specialization: string;
  licenseNumber: string | null;
  phone: string | null;
  address: string | null;
  department: string | null;
  img: string | null;
  colorCode: string | null;
  availabilityStatus: string | null;
  isActive: boolean | null;
  type: JOBTYPE;
  workingDays?: WorkingDays[];
  appointments?: Appointment[];
  diagnosis?: Diagnosis[];
  role: Role | null;
  createdAt: Date;
  updatedAt: Date;
  Prescription?: Prescription[];
  Encounter?: Encounter[];
  MedicalRecords?: MedicalRecords[];
}

export interface WorkingDays {
  id: number;
  doctorId: string;
  day: string;
  startTime: string;
  closeTime: string;
  doctor?: Doctor;
  createdAt: Date;
  updatedAt: Date;
}

export interface Staff {
  id: string;
  email: string;
  name: string;
  phone: string;
  userId: string;
  user?: User;
  address: string;
  department: string | null;
  img: string | null;
  licenseNumber: string | null;
  colorCode: string | null;
  hireDate: Date | null;
  salary: number | null;
  role: Role;
  status: Status;
  createdAt: Date;
  updatedAt: Date;
  immunizations?: Immunization[];
  GrowthChart?: GrowthChart[];
}

export interface Appointment {
  id: number;
  patientId: string;
  doctorId: string;
  serviceId: number | null;
  appointmentDate: Date;
  time: string;
  status: AppointmentStatus | null;
  type: string;
  note: string | null;
  patient?: Patient;
  doctor?: Doctor;
  service?: Services | null;
  bills?: Payment[];
  medical?: MedicalRecords[];
  reminders?: Reminder[];
  reason: string | null;
  createdAt: Date;
  updatedAt: Date;
  Billing?: Billing[];
}

export interface Payment {
  id: number;
  billId: number | null;
  patientId: string;
  appointmentId: number;
  billDate: Date;
  paymentDate: Date;
  discount: number;
  totalAmount: number;
  amountPaid: number;
  paymentMethod: PaymentMethod;
  status: PaymentStatus;
  receiptNumber: number;
  appointment?: Appointment;
  patient?: Patient;
  bills?: PatientBills[];
  createdAt: Date;
  updatedAt: Date;
}

export interface Reminder {
  id: string;
  appointmentId: number;
  appointment?: Appointment;
  method: ReminderMethod;
  sentAt: Date;
  status: ReminderStatus;
}

export interface PatientBills {
  id: number;
  billId: number;
  serviceId: number;
  serviceDate: Date;
  quantity: number;
  unitCost: number;
  totalCost: number;
  service?: Services;
  payment?: Payment;
  createdAt: Date;
  updatedAt: Date;
}

export interface LabTest {
  id: number;
  recordId: number;
  testDate: Date;
  result: string;
  status: string;
  notes: string | null;
  serviceId: number | null;
  services?: Services | null;
  medicalRecord?: MedicalRecords;
  createdAt: Date;
  updatedAt: Date;
}

export interface MedicalRecords {
  id: number;
  patientId: string;
  appointmentId: number;
  doctorId: string;
  treatmentPlan: string | null;
  prescriptions: string | null;
  labRequest: string | null;
  notes: string | null;
  appointment?: Appointment;
  patient?: Patient;
  doctor?: Doctor;
  labTests?: LabTest[];
  encounters?: Encounter[];
  diagnoses?: Diagnosis[];
  prescriptionsList?: Prescription[];
  vitalSigns?: VitalSigns[];
  createdAt: Date;
  updatedAt: Date;
}

export interface Encounter {
  id: string;
  patientId: string;
  patient?: Patient;
  doctorId: string;
  doctor?: Doctor;
  date: Date;
  type: string;
  diagnosis: string | null;
  treatment: string | null;
  notes: string | null;
  medicalId: number;
  medical?: MedicalRecords;
  vitalSigns?: VitalSigns[];
  createdAt: Date;
  updatedAt: Date;
}

export interface VitalSigns {
  id: string;
  encounterId: string | null;
  encounter?: Encounter | null;
  patientId: string;
  medicalId: number;
  medical?: MedicalRecords;
  height: number | null;
  weight: number | null;
  temperature: number | null;
  systolic: number | null;
  diastolic: number | null;
  heartRate: number | null;
  respiratoryRate: number | null;
  oxygenSaturation: number | null;
  recordedAt: Date;
  createdAt: Date;
  updatedAt: Date;
}

export interface Immunization {
  id: string;
  patientId: string;
  patient?: Patient;
  vaccine: string;
  date: Date;
  dose: string | null;
  lotNumber: string | null;
  administeredByStaffId: string | null;
  administeredBy?: Staff | null;
  notes: string | null;
  createdAt: Date;
}

export interface GrowthChart {
  id: string;
  patientId: string;
  gender: Gender | null;
  patient?: Patient;
  date: Date;
  ageInDays: number;
  height: number;
  weight: number;
  headCircumference: number | null;
  percentileHeight: number | null;
  percentileWeight: number | null;
  percentileHead: number | null;
  measuredById: string | null;
  measuredBy?: Staff | null;
  heightZScore: number | null;
  weightZScore: number | null;
  notes: string | null;
}

export interface FeedingLog {
  id: string;
  patientId: string;
  patient?: Patient;
  date: Date;
  type: FeedingType;
  duration: number | null;
  amount: number | null;
  breast: string | null;
  notes: string | null;
}

export interface Billing {
  id: string;
  patientId: string;
  patient?: Patient;
  appointmentId: number | null;
  appointment?: Appointment | null;
  amount: number;
  status: BillingStatus;
  insurance: string | null;
  insuranceId: string | null;
  serviceDate: Date;
  dueDate: Date;
  paidDate: Date | null;
  notes: string | null;
  createdAt: Date;
  updatedAt: Date;
}

export interface Notification {
  id: string;
  userId: string;
  user?: User;
  title: string;
  message: string;
  type: NotificationType;
  read: boolean;
  createdAt: Date;
}

export interface Diagnosis {
  id: number;
  patientId: string;
  medicalId: number;
  doctorId: string;
  doctor?: Doctor;
  symptoms: string;
  diagnosis: string;
  notes: string | null;
  prescribedMedications: string | null;
  followUpPlan: string | null;
  medical?: MedicalRecords;
  createdAt: Date;
  updatedAt: Date;
}

export interface Services {
  id: number;
  serviceName: string;
  description: string;
  price: number;
  labtests?: LabTest[];
  bills?: PatientBills[];
  category: ServiceCategory | null;
  duration: number | null;
  isAvailable: boolean;
  appointments?: Appointment[];
  createdAt: Date;
  updatedAt: Date;
}

export interface Prescription {
  id: number;
  medicalRecordId: number;
  doctorId: string | null;
  patientId: string;
  medicationName: string;
  dosage: string;
  frequency: string;
  duration: string;
  instructions: string | null;
  issuedDate: Date;
  endDate: Date | null;
  status: string;
  medicalRecord?: MedicalRecords;
  doctor?: Doctor | null;
  patient?: Patient;
  createdAt: Date;
  updatedAt: Date;
}

export interface WHOGrowthStandard {
  id: number;
  ageInMonths: number;
  gender: Gender;
  measurementType: MeasurementType;
  lValue: number;
  mValue: number;
  sValue: number;
  sd0: number;
  sd1neg: number;
  sd1pos: number;
  sd2neg: number;
  sd2pos: number;
  sd3neg: number;
  sd3pos: number;
  sd4neg: number | null;
  sd4pos: number | null;
  createdAt: Date;
  updatedAt: Date;
}
