import type { Prisma } from '../../../../../../node_modules/.prisma/client';
import { z } from 'zod';
import { PatientBillsWhereInputObjectSchema as PatientBillsWhereInputObjectSchema } from './objects/PatientBillsWhereInput.schema';
import { PatientBillsOrderByWithAggregationInputObjectSchema as PatientBillsOrderByWithAggregationInputObjectSchema } from './objects/PatientBillsOrderByWithAggregationInput.schema';
import { PatientBillsScalarWhereWithAggregatesInputObjectSchema as PatientBillsScalarWhereWithAggregatesInputObjectSchema } from './objects/PatientBillsScalarWhereWithAggregatesInput.schema';
import { PatientBillsScalarFieldEnumSchema } from './enums/PatientBillsScalarFieldEnum.schema';
import { PatientBillsCountAggregateInputObjectSchema as PatientBillsCountAggregateInputObjectSchema } from './objects/PatientBillsCountAggregateInput.schema';
import { PatientBillsMinAggregateInputObjectSchema as PatientBillsMinAggregateInputObjectSchema } from './objects/PatientBillsMinAggregateInput.schema';
import { PatientBillsMaxAggregateInputObjectSchema as PatientBillsMaxAggregateInputObjectSchema } from './objects/PatientBillsMaxAggregateInput.schema';
import { PatientBillsAvgAggregateInputObjectSchema as PatientBillsAvgAggregateInputObjectSchema } from './objects/PatientBillsAvgAggregateInput.schema';
import { PatientBillsSumAggregateInputObjectSchema as PatientBillsSumAggregateInputObjectSchema } from './objects/PatientBillsSumAggregateInput.schema';

export const PatientBillsGroupBySchema: z.ZodType<Prisma.PatientBillsGroupByArgs> = z.object({ where: PatientBillsWhereInputObjectSchema.optional(), orderBy: z.union([PatientBillsOrderByWithAggregationInputObjectSchema, PatientBillsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PatientBillsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(PatientBillsScalarFieldEnumSchema), _count: z.union([ z.literal(true), PatientBillsCountAggregateInputObjectSchema ]).optional(), _min: PatientBillsMinAggregateInputObjectSchema.optional(), _max: PatientBillsMaxAggregateInputObjectSchema.optional(), _avg: PatientBillsAvgAggregateInputObjectSchema.optional(), _sum: PatientBillsSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.PatientBillsGroupByArgs>;

export const PatientBillsGroupByZodSchema = z.object({ where: PatientBillsWhereInputObjectSchema.optional(), orderBy: z.union([PatientBillsOrderByWithAggregationInputObjectSchema, PatientBillsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PatientBillsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(PatientBillsScalarFieldEnumSchema), _count: z.union([ z.literal(true), PatientBillsCountAggregateInputObjectSchema ]).optional(), _min: PatientBillsMinAggregateInputObjectSchema.optional(), _max: PatientBillsMaxAggregateInputObjectSchema.optional(), _avg: PatientBillsAvgAggregateInputObjectSchema.optional(), _sum: PatientBillsSumAggregateInputObjectSchema.optional() }).strict();