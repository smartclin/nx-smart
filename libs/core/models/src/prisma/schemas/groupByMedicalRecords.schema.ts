import type { Prisma } from '../../../../../../node_modules/.prisma/client';
import { z } from 'zod';
import { MedicalRecordsWhereInputObjectSchema as MedicalRecordsWhereInputObjectSchema } from './objects/MedicalRecordsWhereInput.schema';
import { MedicalRecordsOrderByWithAggregationInputObjectSchema as MedicalRecordsOrderByWithAggregationInputObjectSchema } from './objects/MedicalRecordsOrderByWithAggregationInput.schema';
import { MedicalRecordsScalarWhereWithAggregatesInputObjectSchema as MedicalRecordsScalarWhereWithAggregatesInputObjectSchema } from './objects/MedicalRecordsScalarWhereWithAggregatesInput.schema';
import { MedicalRecordsScalarFieldEnumSchema } from './enums/MedicalRecordsScalarFieldEnum.schema';
import { MedicalRecordsCountAggregateInputObjectSchema as MedicalRecordsCountAggregateInputObjectSchema } from './objects/MedicalRecordsCountAggregateInput.schema';
import { MedicalRecordsMinAggregateInputObjectSchema as MedicalRecordsMinAggregateInputObjectSchema } from './objects/MedicalRecordsMinAggregateInput.schema';
import { MedicalRecordsMaxAggregateInputObjectSchema as MedicalRecordsMaxAggregateInputObjectSchema } from './objects/MedicalRecordsMaxAggregateInput.schema';
import { MedicalRecordsAvgAggregateInputObjectSchema as MedicalRecordsAvgAggregateInputObjectSchema } from './objects/MedicalRecordsAvgAggregateInput.schema';
import { MedicalRecordsSumAggregateInputObjectSchema as MedicalRecordsSumAggregateInputObjectSchema } from './objects/MedicalRecordsSumAggregateInput.schema';

export const MedicalRecordsGroupBySchema: z.ZodType<Prisma.MedicalRecordsGroupByArgs> = z.object({ where: MedicalRecordsWhereInputObjectSchema.optional(), orderBy: z.union([MedicalRecordsOrderByWithAggregationInputObjectSchema, MedicalRecordsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: MedicalRecordsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(MedicalRecordsScalarFieldEnumSchema), _count: z.union([ z.literal(true), MedicalRecordsCountAggregateInputObjectSchema ]).optional(), _min: MedicalRecordsMinAggregateInputObjectSchema.optional(), _max: MedicalRecordsMaxAggregateInputObjectSchema.optional(), _avg: MedicalRecordsAvgAggregateInputObjectSchema.optional(), _sum: MedicalRecordsSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.MedicalRecordsGroupByArgs>;

export const MedicalRecordsGroupByZodSchema = z.object({ where: MedicalRecordsWhereInputObjectSchema.optional(), orderBy: z.union([MedicalRecordsOrderByWithAggregationInputObjectSchema, MedicalRecordsOrderByWithAggregationInputObjectSchema.array()]).optional(), having: MedicalRecordsScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(MedicalRecordsScalarFieldEnumSchema), _count: z.union([ z.literal(true), MedicalRecordsCountAggregateInputObjectSchema ]).optional(), _min: MedicalRecordsMinAggregateInputObjectSchema.optional(), _max: MedicalRecordsMaxAggregateInputObjectSchema.optional(), _avg: MedicalRecordsAvgAggregateInputObjectSchema.optional(), _sum: MedicalRecordsSumAggregateInputObjectSchema.optional() }).strict();